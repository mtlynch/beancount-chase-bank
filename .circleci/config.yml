version: 2.1
executors:
  python:
    docker:
      - image: cimg/python:3.13.1
jobs:
  check_whitespace:
    docker:
      - image: cimg/base:2021.04
    steps:
      - checkout
      - run:
          name: Check for trailing whitespace
          command: ./dev-scripts/check-trailing-whitespace
      - run:
          name: Check that all text files end in a trailing newline
          command: ./dev-scripts/check-trailing-newline
  build_python:
    executor: python
    steps:
      - checkout
      - run:
          name: Install requirements
          command: |
            virtualenv --python python3 ./venv
            . venv/bin/activate
            pip install --requirement requirements.txt
            pip install --requirement dev_requirements.txt
            # Print dependencies for debugging.
            pip freeze
      - run:
          name: Run build script
          command: |
            . venv/bin/activate
            ./dev-scripts/build-python
      - persist_to_workspace:
          root: ./
          paths:
            - .coverage
  prepare_pypi_package:
    executor: python
    steps:
      - checkout
      - run:
          name: Install requirements and run build script
          command: |
            set -x
            mkdir -p ./venv
            virtualenv --python python3 ./venv
            . venv/bin/activate
            pip install \
              build==1.2.2 \
              twine==6.0.1

            # Extract version from git tag (remove 'v' prefix if present)
            if [[ -n "$CIRCLE_TAG" ]]; then
              VERSION=${CIRCLE_TAG#v}
              export PACKAGE_VERSION="$VERSION"
              echo "Building version: $PACKAGE_VERSION from tag: $CIRCLE_TAG"
            fi

            python -m build
            twine check dist/*
      - persist_to_workspace:
          root: .
          paths:
            - venv
            - dist
  publish:
    executor: python
    steps:
      - attach_workspace:
          at: .
      - run:
          name: publish to PyPI
          # Requires TWINE_USERNAME and TWINE_PASSWORD environment variables.
          command: |
              set -x
              . venv/bin/activate
              twine upload dist/*
          environment:
            TWINE_USERNAME: __token__
workflows:
  test:
    jobs:
      - check_whitespace:
          filters:
            tags:
              only: /.*/
      - build_python:
          filters:
            tags:
              only: /.*/
      - prepare_pypi_package:
          filters:
            tags:
              only: /.*/
      - publish:
          requires:
            - build_python
            - prepare_pypi_package
          filters:
            tags:
              only: /[0-9]+(\.[0-9]+){2}/
            branches:
              ignore: /.*/
